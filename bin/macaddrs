#!/usr/bin/env ruby
require 'rubygems'
require 'parallel'

my_addr, broadcast = `ifconfig -a`.split(/[\r\n]/).
  select{|i| i=~ /inet/ }.reject{|i| i=~ /127.0.0.1/ or i =~ /inet6/ }[0].
  split(/\s+/).select{|i| i =~ /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/ }

addrs = []
1.upto(254) do |i|
  addr = my_addr.gsub(/\d+$/, i.to_s)
  break if addr == broadcast
  addrs << addr
end

results = Parallel.map(addrs, :in_threads => addrs.count){|addr|
  `ping -c 1 #{addr}`
  `arp #{addr}`.strip
}.select{|i|
  i =~ /[a-z\d]{1,2}:[a-z\d]{1,2}:[a-z\d]{1,2}:[a-z\d]{1,2}:[a-z\d]{1,2}:[a-z\d]{1,2}/
}.map{|i|
  {
    :mac => i.scan(/[a-z\d]{1,2}:[a-z\d]{1,2}:[a-z\d]{1,2}:[a-z\d]{1,2}:[a-z\d]{1,2}:[a-z\d]{1,2}/)[0],
    :ip => i.scan(/\d+\.\d+\.\d+.\d+/)[0]
  }
}

results.each do |res|
  puts "#{res[:ip]}\t#{res[:mac]}"
end
